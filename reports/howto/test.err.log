Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# %load_ext autoreload
# %autoreload 2

import torch
from torch import nn
torch.set_default_dtype(torch.float64)
import pandas as pd
from scipy import stats
from functools import partial
import matplotlib.pyplot as plt
import matplotlib
matplotlib.use("TkAgg")
%matplotlib inline


from jarvis.db.figshare import data as jdata

from nfflr.data import graph
from nfflr.data.dataset import AtomsDataset
from nfflr.data.graph import periodic_adaptive_radius_graph, periodic_radius_graph
from nfflr.models.gnn import tfm


cutoff = 8.0

# d = AtomsDataset(pd.DataFrame(jdata("dft_3d")))
d = AtomsDataset(
    # "examples/ff/mpf-subset-2.jsonl", 
    "examples/mp3/mpf-2.jsonl", 
    target="energy_and_forces", 
    energy_units="eV/atom",
    transform=partial(periodic_adaptive_radius_graph, r=cutoff, dtype=torch.get_default_dtype())
    # transform=partial(periodic_adaptive_radius_graph, r=5.0, dtype=torch.get_default_dtype())
    )

# d = AtomsDataset(
#     "examples/mlearn/mlearn.json", 
#     target="energy_and_forces", 
#     energy_units="eV",
#     transform=partial(periodic_adaptive_radius_graph, r=cutoff)
# )


reference_energies = d.estimate_reference_energies()

# model_cfg = alignn_ff.ALIGNNConfig(
#     cutoff=cutoff,
#     cutoff_onset=None,
#     alignn_layers=0,
#     gcn_layers=4,
#     atom_features="embedding",
#     compute_forces=True,
#     energy_units = "eV",
#     # reference_energies=reference_energies,
# )

model_cfg = tfm.TFMConfig(
    cutoff=8,
    cutoff_onset=None,
    # cutoff_onset=7.5,    
    layers=3,
    atom_features="embedding",
    compute_forces=True,
    energy_units = "eV",
    # reference_energies=reference_energies,
)

model = tfm.TFM(model_cfg)
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mImportError[0m                               Traceback (most recent call last)
Cell [0;32mIn[2], line 12[0m
[1;32m     10[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[1;32m     11[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m
[0;32m---> 12[0m [43mmatplotlib[49m[38;5;241;43m.[39;49m[43muse[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mTkAgg[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m     13[0m get_ipython()[38;5;241m.[39mrun_line_magic([38;5;124m'[39m[38;5;124mmatplotlib[39m[38;5;124m'[39m, [38;5;124m'[39m[38;5;124minline[39m[38;5;124m'[39m)
[1;32m     16[0m [38;5;28;01mfrom[39;00m [38;5;21;01mjarvis[39;00m[38;5;21;01m.[39;00m[38;5;21;01mdb[39;00m[38;5;21;01m.[39;00m[38;5;21;01mfigshare[39;00m [38;5;28;01mimport[39;00m data [38;5;28;01mas[39;00m jdata

File [0;32m/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/matplotlib/__init__.py:1249[0m, in [0;36muse[0;34m(backend, force)[0m
[1;32m   1244[0m [38;5;28;01mif[39;00m plt [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m   1245[0m     [38;5;28;01mtry[39;00m:
[1;32m   1246[0m         [38;5;66;03m# we need this import check here to re-raise if the[39;00m
[1;32m   1247[0m         [38;5;66;03m# user does not have the libraries to support their[39;00m
[1;32m   1248[0m         [38;5;66;03m# chosen backend installed.[39;00m
[0;32m-> 1249[0m         [43mplt[49m[38;5;241;43m.[39;49m[43mswitch_backend[49m[43m([49m[43mname[49m[43m)[49m
[1;32m   1250[0m     [38;5;28;01mexcept[39;00m [38;5;167;01mImportError[39;00m:
[1;32m   1251[0m         [38;5;28;01mif[39;00m force:

File [0;32m/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/matplotlib/pyplot.py:350[0m, in [0;36mswitch_backend[0;34m(newbackend)[0m
[1;32m    347[0m     current_framework [38;5;241m=[39m cbook[38;5;241m.[39m_get_running_interactive_framework()
[1;32m    348[0m     [38;5;28;01mif[39;00m (current_framework [38;5;129;01mand[39;00m required_framework
[1;32m    349[0m             [38;5;129;01mand[39;00m current_framework [38;5;241m!=[39m required_framework):
[0;32m--> 350[0m         [38;5;28;01mraise[39;00m [38;5;167;01mImportError[39;00m(
[1;32m    351[0m             [38;5;124m"[39m[38;5;124mCannot load backend [39m[38;5;132;01m{!r}[39;00m[38;5;124m which requires the [39m[38;5;132;01m{!r}[39;00m[38;5;124m interactive [39m[38;5;124m"[39m
[1;32m    352[0m             [38;5;124m"[39m[38;5;124mframework, as [39m[38;5;132;01m{!r}[39;00m[38;5;124m is currently running[39m[38;5;124m"[39m[38;5;241m.[39mformat(
[1;32m    353[0m                 newbackend, required_framework, current_framework))
[1;32m    355[0m [38;5;66;03m# Load the new_figure_manager() and show() functions from the backend.[39;00m
[1;32m    356[0m 
[1;32m    357[0m [38;5;66;03m# Classically, backends can directly export these functions.  This should[39;00m
[1;32m    358[0m [38;5;66;03m# keep working for backcompat.[39;00m
[1;32m    359[0m new_figure_manager [38;5;241m=[39m [38;5;28mgetattr[39m(module, [38;5;124m"[39m[38;5;124mnew_figure_manager[39m[38;5;124m"[39m, [38;5;28;01mNone[39;00m)

[0;31mImportError[0m: Cannot load backend 'TkAgg' which requires the 'tk' interactive framework, as 'headless' is currently running

